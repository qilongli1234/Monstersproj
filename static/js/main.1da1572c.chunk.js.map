{"version":3,"sources":["components/card.js","components/cardList.js","components/searchBar.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","x","SearchBar","type","placeholder","onChange","changefunc","App","e","setState","searchfield","target","value","state","this","fetch","then","Response","json","filteredMonsters","filter","m","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGaA,EAAO,SAAAC,GAAK,OAEtB,sBAAKC,UAAU,iBAAf,UAEE,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,eAGvB,mCAAML,EAAMI,QAAQE,QACpB,6BAAKN,EAAMI,QAAQG,YCRVC,EAAW,SAAAR,GAAK,OAIxB,sBAAKC,UAAU,YAAf,cAEAD,EAAMS,SAASC,KAAI,SAAAC,GAAC,OAGhB,cAAC,EAAD,CAAiBP,QAASO,GAAfA,EAAEN,WCRTO,G,MAAY,SAACZ,GAAD,OAErB,uBAAOC,UAAU,SAAUY,KAAK,SAASC,YAAad,EAAMc,YAAaC,SAAUf,EAAMgB,eCkE9EC,E,kDA7Db,aAAc,IAAD,8BAEX,gBAqBDD,WAAY,SAAAE,GAER,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAnBtC,EAAKC,MAAO,CAEXH,YAAY,GAEZX,SAAS,IAVA,E,+CAiBb,SAAYS,GAGVM,KAAKL,SAAS,CAACC,YAAYF,EAAEG,OAAOC,U,+BAUtC,WAAqB,IAAD,OAClBG,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UAAQF,MAAK,SAAAtB,GAAO,OAAE,EAAKe,SAAS,CAACV,SAASL,S,oBAK5H,WAGE,MAAgCoB,KAAKD,MAA9Bd,EAAP,EAAOA,SAAWW,EAAlB,EAAkBA,YACZS,EAAmBpB,EAASqB,QAAO,SAAAC,GAAC,OAAEA,EAAEzB,KAAK0B,cAAcC,SAASb,EAAYY,kBACxF,OAGE,sBAAK/B,UAAU,MAAf,UAGA,0DAED,cAAC,EAAD,CAAYa,YAAY,kBAAmBE,WAAYQ,KAAKR,aAG1D,cAAC,EAAD,CAAUP,SAAUoB,W,GAvDNK,aCIJC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1da1572c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.styles.css\";\r\n\r\nexport const Card = props=>(\r\n\r\n   <div className=\"card-container\">\r\n\r\n     <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2`}/>\r\n\r\n     \r\n    <h1> {props.monster.name}</h1>\r\n    <h2>{props.monster.email}</h2>\r\n\r\n\r\n   </div>\r\n\r\n\r\n\r\n\r\n);","import React from \"react\";\r\nimport './card-list.styles.css';\r\nimport {Card} from \"./card.js\";\r\nexport const CardList = props =>(\r\n     \r\n\r\n    \r\n     <div className=\"card-list\"> {\r\n     \r\n     props.monsters.map(x=>\r\n        \r\n        \r\n        (<Card key={x.id} monster={x} />)\r\n        \r\n        )\r\n     \r\n     }\r\n    \r\n    \r\n    \r\n    </div>\r\n);","import React from 'react';\r\nimport \"./search-box.styles.css\"\r\n\r\n\r\nexport const SearchBar = (props)=>(\r\n    \r\n    <input className='search'  type='search' placeholder={props.placeholder} onChange={props.changefunc}     />\r\n \r\n \r\n  \r\n \r\n );","\nimport React,  {Component} from 'react';\n\n\nimport './App.css';\nimport {CardList} from './components/cardList';\nimport {SearchBar} from './components/searchBar';\n\nclass  App extends Component {\n\n\n  constructor(){\n    \n    super();\n     \n     \n  \n     this.state= {\n\n      searchfield:\"\",\n\n      monsters:[]\n     };\n\n      \n\n  } \n\n  changefunc1(e){\n\n\n    this.setState({searchfield:e.target.value});\n  }\n\n   changefunc= e=>{\n\n       this.setState({searchfield:e.target.value});\n\n\n   }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(Response=>Response.json()).then(monster=>this.setState({monsters:monster}));\n   }\n\n\n\n  render(){\n    \n    \n    const {monsters , searchfield}= this.state;\n    const filteredMonsters = monsters.filter(m=>m.name.toLowerCase().includes(searchfield.toLowerCase()));\n  return (\n    \n    \n    <div className=\"App\" >\n   \n    \n    <h1>Qilong's Monster Rolodex</h1>\n     \n   <SearchBar  placeholder=\"search monstfer\"  changefunc={this.changefunc}  />\n    \n     \n     <CardList monsters={filteredMonsters}/>\n     \n    </div>\n  );\n   \n\n\n}\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}